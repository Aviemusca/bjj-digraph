# Generated by Django 3.1.3 on 2020-12-01 15:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('graphs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseNode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(default='', max_length=200)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('position_x', models.FloatField(default=100)),
                ('position_y', models.FloatField(default=100)),
                ('graph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_nodes', to='graphs.graph')),
            ],
        ),
        migrations.CreateModel(
            name='GameNode',
            fields=[
                ('basenode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='nodes.basenode')),
                ('game_type', models.CharField(choices=[('position', 'position'), ('submission', 'submission'), ('entry', 'entry'), ('transition', 'transition'), ('sweep', 'sweep'), ('takedown', 'takedown'), ('guardPull', 'guardPull'), ('guardPass', 'guardPass')], default='', max_length=50)),
                ('game_subtype', models.CharField(choices=[('user', 'user'), ('opponent', 'opponent')], default='user', max_length=50)),
                ('description', models.TextField(blank=True, default='')),
                ('comment', models.TextField(blank=True, default='')),
                ('effectiveness', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(-100), django.core.validators.MaxValueValidator(100)])),
                ('priority', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(-100), django.core.validators.MaxValueValidator(100)])),
                ('proficiency', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(-100), django.core.validators.MaxValueValidator(100)])),
            ],
            options={
                'verbose_name': 'Game Node',
                'verbose_name_plural': 'Game Nodes',
            },
            bases=('nodes.basenode',),
        ),
        migrations.CreateModel(
            name='MetaNode',
            fields=[
                ('basenode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='nodes.basenode')),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'verbose_name': 'Meta Node',
                'verbose_name_plural': 'Meta Nodes',
            },
            bases=('nodes.basenode',),
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('node_type', models.CharField(choices=[('position', 'position'), ('submission', 'submission'), ('entry', 'entry'), ('transition', 'transition'), ('sweep', 'sweep'), ('takedown', 'takedown'), ('guardPull', 'guardPull'), ('guardPass', 'guardPass')], default='', max_length=50)),
                ('description', models.TextField(blank=True, default='')),
                ('comment', models.TextField(blank=True, default='')),
                ('effectiveness', models.IntegerField(default=50)),
                ('priority', models.IntegerField(default=50)),
                ('proficiency', models.IntegerField(default=50)),
                ('position_x', models.FloatField(default=100)),
                ('position_y', models.FloatField(default=100)),
                ('graph', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='graphs.graph')),
            ],
            options={
                'verbose_name': 'Node',
                'verbose_name_plural': 'Nodes',
            },
        ),
    ]
