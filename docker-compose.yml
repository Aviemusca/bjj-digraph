version: '2'

services:
    nginx: 
      container_name: nginx
      restart: unless-stopped
      build:
          context: .
          dockerfile: ./docker/nginx/Dockerfile
      ports:
          - 80:80
          - 443:443
      volumes:
          - static_volume:/app/server/staticfiles
          - ./docker/nginx/production:/etc/nginx/conf.d
          - ./docker/nginx/certbot/conf:/etc/letsencrypt
          - ./docker/nginx/certbot/www:/var/www/certbot
      depends_on: 
        - server

    server:
      container_name: django
      restart: unless-stopped
      build:
          context: .
          dockerfile: ./docker/server/Dockerfile
      volumes:
          
      entrypoint: /app/docker/server/wsgi-entrypoint.sh
      volumes:
          - static_volume:/app/server/staticfiles
      expose:
          - 8000        
      depends_on: 
        - pgdb

    pgdb:
        image: postgres
        restart: unless-stopped
        container_name: pgdb
        environment:
          - POSTGRES_DB=${DB_NAME}
          - POSTGRES_USER=${DB_USER}
          - POSTGRES_PASSWORD=${DB_PASS}
        volumes:
          - pgdata:/var/lib/postgresql/data/

    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
        - ./docker/nginx/certbot/conf:/etc/letsencrypt
        - ./docker/nginx/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  static_volume:
  pgdata:
